import { captionViewModel } from "./caption.js";
import { imgBlock } from "./component/img_block.js";
import { checkLastParagraph } from "./create_paragraph.js";

export function past(editor) {
    editor.addEventListener("paste", function (event) {
        event.preventDefault();

        const clipboardData = event.clipboardData;
        let pastedItems = [];

        // –ï—Å–ª–∏ –≤—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Ñ–∞–π–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
        if (clipboardData.files.length > 0) {
            [...clipboardData.files].forEach((file) => {
                const reader = new FileReader();
                reader.onloadend = function () {
                    pastedItems.push({ type: "image", data: reader.result });
                    // processPastedItems(editor, pastedItems);
                    insertImage(editor, reader.result);
                };
                reader.readAsDataURL(file);
            });
            return;
        }

        // –ï—Å–ª–∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è HTML-–∫–æ–¥
        // const pastedHTML = clipboardData.getData("text/html");
        // if (pastedHTML) {
        //     const parser = new DOMParser();
        //     const doc = parser.parseFromString(pastedHTML, "text/html");
        //
        //     // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –≤–Ω—É—Ç—Ä–∏ <body>, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ—Ä—è–¥–æ–∫
        //     doc.body.childNodes.forEach((node) => {
        //         console.log(node.nodeName)
        //         if (node.nodeName === "IMG") {
        //             // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–π <img> —É–∑–µ–ª
        //             pastedItems.push({ type: "image", data: node.src });
        //
        //
        //         } else if (node.nodeType === Node.TEXT_NODE) {
        //             // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —É–∑–µ–ª
        //             const text = node.textContent.trim();
        //             if (text) {
        //                 pastedItems.push({ type: "text", data: text });
        //             }
        //         } else if (node.nodeType === Node.ELEMENT_NODE) {
        //             // –ï—Å–ª–∏ —ç—Ç–æ —ç–ª–µ–º–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, <div>, <p>)
        //             // –°–Ω–∞—á–∞–ª–∞ –∏–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–∞
        //             const text = node.innerText.trim();
        //             if (text) {
        //                 pastedItems.push({ type: "text", data: text });
        //             }
        //
        //             // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —ç—Ç–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        //             const images = node.querySelectorAll("img");
        //             images.forEach((img) => {
        //                 pastedItems.push({ type: "image", data: img.src });
        //             });
        //         }
        //
        //     });
        //
        //     processPastedItems(editor, pastedItems);
        //     return;
        // }


        // –ï—Å–ª–∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        const pastedText = clipboardData.getData("text/plain");
        if (pastedText) {
            pastedItems.push({ type: "text", data: pastedText });
            processPastedItems(editor, pastedItems);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function processPastedItems(editor, items) {
    console.log("üìã –í—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", items);

    items.forEach((item) => {
        console.log(item);
        if (item.type === "image") {
            insertImage(editor, item.data);

        } else if (item.type === "text") {
            insertText(editor, item.data);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –≤—Å—Ç–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function insertImage(editor, imageUrl) {
    const imageWrapper = imgBlock(imageUrl);
    const selection = window.getSelection();
    const currentElement = selection.focusNode;
    const parentElement = currentElement.closest(".tag_editor_wrap");

    if (parentElement) {
        parentElement.parentNode.insertBefore(imageWrapper, parentElement.nextSibling);
        parentElement.remove();
    } else {
        editor.appendChild(imageWrapper);
    }

    captionViewModel();
    checkLastParagraph(editor);
}

// –§—É–Ω–∫—Ü–∏—è –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞
function insertText(editor, text) {
    const paragraphs = text.split("\n").map((line) => {
        const p = document.createElement("p");
        p.classList.remove()
        p.classList.add("paragraph", "tag_editor_wrap");
        p.textContent = line;
        return p;
    });

    const selection = window.getSelection();
    const currentElement = selection.focusNode;
    const parentElement = currentElement.closest(".tag_editor_wrap");

    if (parentElement) {
        paragraphs.forEach((p) => parentElement.parentNode.insertBefore(p, parentElement.nextSibling));
        parentElement.remove();
    } else {
        paragraphs.forEach((p) => editor.appendChild(p));
    }

    captionViewModel();
    checkLastParagraph(editor);
}


